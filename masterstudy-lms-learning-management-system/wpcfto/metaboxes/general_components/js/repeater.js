(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

Vue.component('wpcfto_repeater', {
  props: ['fields', 'field_label', 'field_name', 'field_id', 'field_value', 'field_data'],
  data: function data() {
    return {
      repeater: [],
      repeater_values: {},
      disable_scroll: false
    };
  },
  template: "\n    <div class=\"wpcfto_generic_field wpcfto_generic_field_repeater wpcfto-repeater unflex_fields\">\n\n        <wpcfto_fields_aside_before :fields=\"fields\" :field_label=\"field_label\"></wpcfto_fields_aside_before>\n        \n        <div class=\"wpcfto-field-content\">\n\n            <div v-for=\"(area, area_key) in repeater\" class=\"wpcfto-repeater-single\" :class=\"'wpcfto-repeater_' + field_name + '_' + area_key \">\n    \n                <div class=\"wpcfto_group_title\" v-html=\"field_label + ' #' + (area_key + 1)\"></div>\n    \n                <div class=\"repeater_inner\">\n    \n                    <div class=\"wpcfto-repeater-field\" v-for=\"(field, field_name_inner) in fields.fields\">\n                    \n                        <component :is=\"'wpcfto_' + field.type\"\n                                   :fields=\"field\"\n                                   :field_name=\"field_name + '_' + area_key + '_' + field_name_inner\"\n                                   :field_label=\"field.label\"\n                                   :field_value=\"getFieldValue(area_key, field, field_name_inner)\"\n                                   :field_data=\"field\"\n                                   :field_native_name=\"field_name\"\n                                   :field_native_name_inner=\"field_name_inner\"\n                                   @wpcfto-get-value=\"$set(repeater[area_key], field_name_inner, $event)\">\n                        </component>\n    \n                    </div>\n    \n                </div>\n    \n                <span class=\"wpcfto-repeater-single-delete\" @click=\"removeArea(area_key)\">\n                    <i class=\"fa fa-trash-alt\"></i>Delete\n                </span>\n    \n            </div>\n    \n            <div v-if=\"repeater && repeater.length > 0\" class=\"separator\"></div>\n    \n            <div class=\"addArea\" @click=\"addArea\">\n                <i class=\"fa fa-plus-circle\"></i>\n                <span v-html=\"'Add ' + field_label\"></span>\n            </div>\n        \n        </div>\n        \n        <wpcfto_fields_aside_after :fields=\"fields\"></wpcfto_fields_aside_after>\n\n    </div>\n    ",
  mounted: function mounted() {
    var _this = this;

    if (typeof _this.field_value === 'string' && WpcftoIsJsonString(_this.field_value)) {
      _this.field_value = JSON.parse(_this.field_value);
    }

    if (typeof _this.field_value !== 'undefined' && typeof _this.field_value !== 'string') {
      _this.$set(_this, 'repeater_values', _this.field_value);

      _this.repeater_values.forEach(function () {
        _this.repeater.push({});
      });
    }

    if (typeof _this.field_data !== 'undefined' && typeof _this.field_data['disable_scroll'] !== 'undefined') _this.disable_scroll = true;
  },
  methods: {
    addArea: function addArea() {
      this.repeater.push({
        closed_tab: true
      });

      if (!this.disable_scroll) {
        var el = 'wpcfto-repeater_' + this.field_name + '_' + (this.repeater.length - 1);
        Vue.nextTick(function () {
          if (typeof jQuery !== 'undefined') {
            var $ = jQuery;
            $([document.documentElement, document.body]).animate({
              scrollTop: $("." + el).offset().top - 40
            }, 400);
          }
        });
      }
    },
    toggleArea: function toggleArea(area) {
      var currentState = typeof area['closed_tab'] !== 'undefined' ? area['closed_tab'] : false;
      this.$set(area, 'closed_tab', !currentState);
    },
    removeArea: function removeArea(areaIndex) {
      if (confirm('Do your really want to delete this field?')) {
        this.repeater.splice(areaIndex, 1);
      }
    },
    getFieldValue: function getFieldValue(key, field, field_name) {
      if (typeof this.repeater_values === 'undefined') return field.value;
      if (typeof this.repeater_values[key] === 'undefined') return field.value;
      if (typeof this.repeater_values[key][field_name] === 'undefined') return field.value;
      return this.repeater_values[key][field_name];
    }
  },
  watch: {
    repeater: {
      deep: true,
      handler: function handler(repeater) {
        this.$emit('wpcfto-get-value', repeater);
      }
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZha2VfZGZkYzFlNTUuanMiXSwibmFtZXMiOlsiVnVlIiwiY29tcG9uZW50IiwicHJvcHMiLCJkYXRhIiwicmVwZWF0ZXIiLCJyZXBlYXRlcl92YWx1ZXMiLCJkaXNhYmxlX3Njcm9sbCIsInRlbXBsYXRlIiwibW91bnRlZCIsIl90aGlzIiwiZmllbGRfdmFsdWUiLCJXcGNmdG9Jc0pzb25TdHJpbmciLCJKU09OIiwicGFyc2UiLCIkc2V0IiwiZm9yRWFjaCIsInB1c2giLCJmaWVsZF9kYXRhIiwibWV0aG9kcyIsImFkZEFyZWEiLCJjbG9zZWRfdGFiIiwiZWwiLCJmaWVsZF9uYW1lIiwibGVuZ3RoIiwibmV4dFRpY2siLCJqUXVlcnkiLCIkIiwiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJib2R5IiwiYW5pbWF0ZSIsInNjcm9sbFRvcCIsIm9mZnNldCIsInRvcCIsInRvZ2dsZUFyZWEiLCJhcmVhIiwiY3VycmVudFN0YXRlIiwicmVtb3ZlQXJlYSIsImFyZWFJbmRleCIsImNvbmZpcm0iLCJzcGxpY2UiLCJnZXRGaWVsZFZhbHVlIiwia2V5IiwiZmllbGQiLCJ2YWx1ZSIsIndhdGNoIiwiZGVlcCIsImhhbmRsZXIiLCIkZW1pdCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLEdBQUcsQ0FBQ0MsU0FBSixDQUFjLGlCQUFkLEVBQWlDO0FBQy9CQyxFQUFBQSxLQUFLLEVBQUUsQ0FBQyxRQUFELEVBQVcsYUFBWCxFQUEwQixZQUExQixFQUF3QyxVQUF4QyxFQUFvRCxhQUFwRCxFQUFtRSxZQUFuRSxDQUR3QjtBQUUvQkMsRUFBQUEsSUFBSSxFQUFFLFNBQVNBLElBQVQsR0FBZ0I7QUFDcEIsV0FBTztBQUNMQyxNQUFBQSxRQUFRLEVBQUUsRUFETDtBQUVMQyxNQUFBQSxlQUFlLEVBQUUsRUFGWjtBQUdMQyxNQUFBQSxjQUFjLEVBQUU7QUFIWCxLQUFQO0FBS0QsR0FSOEI7QUFTL0JDLEVBQUFBLFFBQVEsRUFBRSxtcEVBVHFCO0FBVS9CQyxFQUFB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Q0FBQ0MsS0FBYjtBQUNqRCxVQUFJLE9BQU8sS0FBS3ZDLGVBQUwsQ0FBcUJxQyxHQUFyQixDQUFQLEtBQXFDLFdBQXpDLEVBQXNELE9BQU9DLEtBQUssQ0FBQ0MsS0FBYjtBQUN0RCxVQUFJLE9BQU8sS0FBS3ZDLGVBQUwsQ0FBcUJxQyxHQUFyQixFQUEwQnBCLFVBQTFCLENBQVAsS0FBaUQsV0FBckQsRUFBa0UsT0FBT3FCLEtBQUssQ0FBQ0MsS0FBYjtBQUNsRSxhQUFPLEtBQUt2QyxlQUFMLENBQXFCcUMsR0FBckIsRUFBMEJwQixVQUExQixDQUFQO0FBQ0Q7QUFoQ00sR0EzQnNCO0FBNkQvQnVCLEVBQUFBLEtBQUssRUFBRTtBQUNMekMsSUFBQUEsUUFBUSxFQUFFO0FBQ1IwQyxNQUFBQSxJQUFJLEVBQUUsSUFERTtBQUVSQyxNQUFBQSxPQUFPLEVBQUUsU0FBU0EsT0FBVCxDQUFpQjNDLFFBQWpCLEVBQTJCO0FBQ2xDLGFBQUs0QyxLQUFMLENBQVcsa0JBQVgsRUFBK0I1QyxRQUEvQjtBQUNEO0FBSk87QUFETDtBQTdEd0IsQ0FBakMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudCgnd3BjZnRvX3JlcGVhdGVyJywge1xuICBwcm9wczogWydmaWVsZHMnLCAnZmllbGRfbGFiZWwnLCAnZmllbGRfbmFtZScsICdmaWVsZF9pZCcsICdmaWVsZF92YWx1ZScsICdmaWVsZF9kYXRhJ10sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlcGVhdGVyOiBbXSxcbiAgICAgIHJlcGVhdGVyX3ZhbHVlczoge30sXG4gICAgICBkaXNhYmxlX3Njcm9sbDogZmFsc2VcbiAgICB9O1xuICB9LFxuICB0ZW1wbGF0ZTogXCJcXG4gICAgPGRpdiBjbGFzcz1cXFwid3BjZnRvX2dlbmVyaWNfZmllbGQgd3BjZnRvX2dlbmVyaWNfZmllbGRfcmVwZWF0ZXIgd3BjZnRvLXJlcGVhdGVyIHVuZmxleF9maWVsZHNcXFwiPlxcblxcbiAgICAgICAgPHdwY2Z0b19maWVsZHNfYXNpZGVfYmVmb3JlIDpmaWVsZHM9XFxcImZpZWxkc1xcXCIgOmZpZWxkX2xhYmVsPVxcXCJmaWVsZF9sYWJlbFxcXCI+PC93cGNmdG9fZmllbGRzX2FzaWRlX2JlZm9yZT5cXG4gICAgICAgIFxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwid3BjZnRvLWZpZWxkLWNvbnRlbnRcXFwiPlxcblxcbiAgICAgICAgICAgIDxkaXYgdi1mb3I9XFxcIihhcmVhLCBhcmVhX2tleSkgaW4gcmVwZWF0ZXJcXFwiIGNsYXNzPVxcXCJ3cGNmdG8tcmVwZWF0ZXItc2luZ2xlXFxcIiA6Y2xhc3M9XFxcIid3cGNmdG8tcmVwZWF0ZXJfJyArIGZpZWxkX25hbWUgKyAnXycgKyBhcmVhX2tleSBcXFwiPlxcbiAgICBcXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwid3BjZnRvX2dyb3VwX3RpdGxlXFxcIiB2LWh0bWw9XFxcImZpZWxkX2xhYmVsICsgJyAjJyArIChhcmVhX2tleSArIDEpXFxcIj48L2Rpdj5cXG4gICAgXFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInJlcGVhdGVyX2lubmVyXFxcIj5cXG4gICAgXFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJ3cGNmdG8tcmVwZWF0ZXItZmllbGRcXFwiIHYtZm9yPVxcXCIoZmllbGQsIGZpZWxkX25hbWVfaW5uZXIpIGluIGZpZWxkcy5maWVsZHNcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgXFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbXBvbmVudCA6aXM9XFxcIid3cGNmdG9fJyArIGZpZWxkLnR5cGVcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ZmllbGRzPVxcXCJmaWVsZFxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZF9uYW1lPVxcXCJmaWVsZF9uYW1lICsgJ18nICsgYXJlYV9rZXkgKyAnXycgKyBmaWVsZF9uYW1lX2lubmVyXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkX2xhYmVsPVxcXCJmaWVsZC5sYWJlbFxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZF92YWx1ZT1cXFwiZ2V0RmllbGRWYWx1ZShhcmVhX2tleSwgZmllbGQsIGZpZWxkX25hbWVfaW5uZXIpXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkX2RhdGE9XFxcImZpZWxkXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkX25hdGl2ZV9uYW1lPVxcXCJmaWVsZF9uYW1lXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkX25hdGl2ZV9uYW1lX2lubmVyPVxcXCJmaWVsZF9uYW1lX2lubmVyXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQHdwY2Z0by1nZXQtdmFsdWU9XFxcIiRzZXQocmVwZWF0ZXJbYXJlYV9rZXldLCBmaWVsZF9uYW1lX2lubmVyLCAkZXZlbnQpXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2NvbXBvbmVudD5cXG4gICAgXFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgXFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICBcXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcIndwY2Z0by1yZXBlYXRlci1zaW5nbGUtZGVsZXRlXFxcIiBAY2xpY2s9XFxcInJlbW92ZUFyZWEoYXJlYV9rZXkpXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVxcXCJmYSBmYS10cmFzaC1hbHRcXFwiPjwvaT5EZWxldGVcXG4gICAgICAgICAgICAgICAgPC9zcGFuPlxcbiAgICBcXG4gICAgICAgICAgICA8L2Rpdj5cXG4gICAgXFxuICAgICAgICAgICAgPGRpdiB2LWlmPVxcXCJyZXBlYXRlciAmJiByZXBlYXRlci5sZW5ndGggPiAwXFxcIiBjbGFzcz1cXFwic2VwYXJhdG9yXFxcIj48L2Rpdj5cXG4gICAgXFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYWRkQXJlYVxcXCIgQGNsaWNrPVxcXCJhZGRBcmVhXFxcIj5cXG4gICAgICAgICAgICAgICAgPGkgY2xhc3M9XFxcImZhIGZhLXBsdXMtY2lyY2xlXFxcIj48L2k+XFxuICAgICAgICAgICAgICAgIDxzcGFuIHYtaHRtbD1cXFwiJ0FkZCAnICsgZmllbGRfbGFiZWxcXFwiPjwvc3Bhbj5cXG4gICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgIFxcbiAgICAgICAgPC9kaXY+XFxuICAgICAgICBcXG4gICAgICAgIDx3cGNmdG9fZmllbGRzX2FzaWRlX2FmdGVyIDpmaWVsZHM9XFxcImZpZWxkc1xcXCI+PC93cGNmdG9fZmllbGRzX2FzaWRlX2FmdGVyPlxcblxcbiAgICA8L2Rpdj5cXG4gICAgXCIsXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIGlmICh0eXBlb2YgX3RoaXMuZmllbGRfdmFsdWUgPT09ICdzdHJpbmcnICYmIFdwY2Z0b0lzSnNvblN0cmluZyhfdGhpcy5maWVsZF92YWx1ZSkpIHtcbiAgICAgIF90aGlzLmZpZWxkX3ZhbHVlID0gSlNPTi5wYXJzZShfdGhpcy5maWVsZF92YWx1ZSk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBfdGhpcy5maWVsZF92YWx1ZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIF90aGlzLmZpZWxkX3ZhbHVlICE9PSAnc3RyaW5nJykge1xuICAgICAgX3RoaXMuJHNldChfdGhpcywgJ3JlcGVhdGVyX3ZhbHVlcycsIF90aGlzLmZpZWxkX3ZhbHVlKTtcblxuICAgICAgX3RoaXMucmVwZWF0ZXJfdmFsdWVzLmZvckVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpcy5yZXBlYXRlci5wdXNoKHt9KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgX3RoaXMuZmllbGRfZGF0YSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIF90aGlzLmZpZWxkX2RhdGFbJ2Rpc2FibGVfc2Nyb2xsJ10gIT09ICd1bmRlZmluZWQnKSBfdGhpcy5kaXNhYmxlX3Njcm9sbCA9IHRydWU7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBhZGRBcmVhOiBmdW5jdGlvbiBhZGRBcmVhKCkge1xuICAgICAgdGhpcy5yZXBlYXRlci5wdXNoKHtcbiAgICAgICAgY2xvc2VkX3RhYjogdHJ1ZVxuICAgICAgfSk7XG5cbiAgICAgIGlmICghdGhpcy5kaXNhYmxlX3Njcm9sbCkge1xuICAgICAgICB2YXIgZWwgPSAnd3BjZnRvLXJlcGVhdGVyXycgKyB0aGlzLmZpZWxkX25hbWUgKyAnXycgKyAodGhpcy5yZXBlYXRlci5sZW5ndGggLSAxKTtcbiAgICAgICAgVnVlLm5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAodHlwZW9mIGpRdWVyeSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHZhciAkID0galF1ZXJ5O1xuICAgICAgICAgICAgJChbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCBkb2N1bWVudC5ib2R5XSkuYW5pbWF0ZSh7XG4gICAgICAgICAgICAgIHNjcm9sbFRvcDogJChcIi5cIiArIGVsKS5vZmZzZXQoKS50b3AgLSA0MFxuICAgICAgICAgICAgfSwgNDAwKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgdG9nZ2xlQXJlYTogZnVuY3Rpb24gdG9nZ2xlQXJlYShhcmVhKSB7XG4gICAgICB2YXIgY3VycmVudFN0YXRlID0gdHlwZW9mIGFyZWFbJ2Nsb3NlZF90YWInXSAhPT0gJ3VuZGVmaW5lZCcgPyBhcmVhWydjbG9zZWRfdGFiJ10gOiBmYWxzZTtcbiAgICAgIHRoaXMuJHNldChhcmVhLCAnY2xvc2VkX3RhYicsICFjdXJyZW50U3RhdGUpO1xuICAgIH0sXG4gICAgcmVtb3ZlQXJlYTogZnVuY3Rpb24gcmVtb3ZlQXJlYShhcmVhSW5kZXgpIHtcbiAgICAgIGlmIChjb25maXJtKCdEbyB5b3VyIHJlYWxseSB3YW50IHRvIGRlbGV0ZSB0aGlzIGZpZWxkPycpKSB7XG4gICAgICAgIHRoaXMucmVwZWF0ZXIuc3BsaWNlKGFyZWFJbmRleCwgMSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBnZXRGaWVsZFZhbHVlOiBmdW5jdGlvbiBnZXRGaWVsZFZhbHVlKGtleSwgZmllbGQsIGZpZWxkX25hbWUpIHtcbiAgICAgIGlmICh0eXBlb2YgdGhpcy5yZXBlYXRlcl92YWx1ZXMgPT09ICd1bmRlZmluZWQnKSByZXR1cm4gZmllbGQudmFsdWU7XG4gICAgICBpZiAodHlwZW9mIHRoaXMucmVwZWF0ZXJfdmFsdWVzW2tleV0gPT09ICd1bmRlZmluZWQnKSByZXR1cm4gZmllbGQudmFsdWU7XG4gICAgICBpZiAodHlwZW9mIHRoaXMucmVwZWF0ZXJfdmFsdWVzW2tleV1bZmllbGRfbmFtZV0gPT09ICd1bmRlZmluZWQnKSByZXR1cm4gZmllbGQudmFsdWU7XG4gICAgICByZXR1cm4gdGhpcy5yZXBlYXRlcl92YWx1ZXNba2V5XVtmaWVsZF9uYW1lXTtcbiAgICB9XG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgcmVwZWF0ZXI6IHtcbiAgICAgIGRlZXA6IHRydWUsXG4gICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHJlcGVhdGVyKSB7XG4gICAgICAgIHRoaXMuJGVtaXQoJ3dwY2Z0by1nZXQtdmFsdWUnLCByZXBlYXRlcik7XG4gICAgICB9XG4gICAgfVxuICB9XG59KTsiXX0=
},{}]},{},[1])